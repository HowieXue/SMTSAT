#coding: utf-8
import sys
import re




def Convert_Assert(line,ous):
    if line.startswith("(assert"):
        notconv = re.sub(r"not ", "-", line)
        #print(notconv)
        findrst = re.sub(r"[a-z()]", "", notconv)
        cvtrst = findrst.strip() + " 0\n"
        #print(cvtrst)
        ous.write(cvtrst)



def ConvertSMTFile(file):
    ins = open(file, 'r+')
    insrB = open(file, 'rb')
    ous = open("%s.cnf" % file, 'w')

    line = ''
    while True:
        prevLine = line
        line = ins.readline()
        if line.startswith("(assert"):break

    #print(line)
    maxnum = prevLine.split()[1]
    maxnumrst = re.sub(r"[p]", "", maxnum)
    # ous.write("p cnf "+maxnumrst +'\n')

    linNum = 0
    while line:
        Convert_Assert(line, ous)
        line = ins.readline()
        linNum += 1

    linNum -= 2

    with open("%s.cnf" % file, 'r+') as f:
        content = f.read()
        f.seek(0,0)
        # f.write("Generated by SMTGenerator\n")
        f.write("p cnf "+maxnumrst + " "+str(linNum) +'\n' + content)


    ins.close()
    ous.close()

    print("OK, finished covert bit-vec smt to cnf!")


if __name__ == "__main__":
    ConvertSMTFile((sys.argv[1]))
